*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVSA0503........................................*
FORM GET_DATA_ZVSA0503.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA0501 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA0503 .
ZVSA0503-MANDT =
ZTSA0501-MANDT .
ZVSA0503-PERNR =
ZTSA0501-PERNR .
ZVSA0503-ENAME =
ZTSA0501-ENAME .
ZVSA0503-ENTDT =
ZTSA0501-ENTDT .
ZVSA0503-GENDER =
ZTSA0501-GENDER .
ZVSA0503-DEPCD =
ZTSA0501-DEPCD .
    SELECT SINGLE * FROM ZTSA0502 WHERE
DEPCD = ZTSA0501-DEPCD .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA0503.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA0503 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA0503.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA0503-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0501 WHERE
  PERNR = ZVSA0503-PERNR .
    IF SY-SUBRC = 0.
    DELETE ZTSA0501 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0501 WHERE
  PERNR = ZVSA0503-PERNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA0501.
    ENDIF.
ZTSA0501-MANDT =
ZVSA0503-MANDT .
ZTSA0501-PERNR =
ZVSA0503-PERNR .
ZTSA0501-ENAME =
ZVSA0503-ENAME .
ZTSA0501-ENTDT =
ZVSA0503-ENTDT .
ZTSA0501-GENDER =
ZVSA0503-GENDER .
ZTSA0501-DEPCD =
ZVSA0503-DEPCD .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0501 ##WARN_OK.
    ELSE.
    INSERT ZTSA0501 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA0503-UPD_FLAG,
STATUS_ZVSA0503-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA0503.
  SELECT SINGLE * FROM ZTSA0501 WHERE
PERNR = ZVSA0503-PERNR .
ZVSA0503-MANDT =
ZTSA0501-MANDT .
ZVSA0503-PERNR =
ZTSA0501-PERNR .
ZVSA0503-ENAME =
ZTSA0501-ENAME .
ZVSA0503-ENTDT =
ZTSA0501-ENTDT .
ZVSA0503-GENDER =
ZTSA0501-GENDER .
ZVSA0503-DEPCD =
ZTSA0501-DEPCD .
    SELECT SINGLE * FROM ZTSA0502 WHERE
DEPCD = ZTSA0501-DEPCD .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA0503 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA0503-PERNR TO
ZTSA0501-PERNR .
MOVE ZVSA0503-MANDT TO
ZTSA0501-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0501'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0501 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0501'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZVSA0503 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZTSA0501-MANDT =
ZVSA0503-MANDT .
ZTSA0501-PERNR =
ZVSA0503-PERNR .
ZTSA0501-ENAME =
ZVSA0503-ENAME .
ZTSA0501-ENTDT =
ZVSA0503-ENTDT .
ZTSA0501-GENDER =
ZVSA0503-GENDER .
ZTSA0501-DEPCD =
ZVSA0503-DEPCD .
    SELECT SINGLE * FROM ZTSA0502 WHERE
DEPCD = ZTSA0501-DEPCD .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: ZVSA0504........................................*
FORM GET_DATA_ZVSA0504.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA0502 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA0504 .
ZVSA0504-MANDT =
ZTSA0502-MANDT .
ZVSA0504-DEPCD =
ZTSA0502-DEPCD .
ZVSA0504-DEPNO =
ZTSA0502-DEPNO .
    SELECT SINGLE * FROM ZTSA0502_T WHERE
DEPCD = ZTSA0502-DEPCD AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA0504-DEPNA =
ZTSA0502_T-DEPNA .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA0504.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA0504 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA0504.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA0504-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0502 WHERE
  DEPCD = ZVSA0504-DEPCD .
    IF SY-SUBRC = 0.
    DELETE ZTSA0502 .
    ENDIF.
    DELETE FROM ZTSA0502_T WHERE
    DEPCD = ZTSA0502-DEPCD .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA0502 WHERE
  DEPCD = ZVSA0504-DEPCD .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA0502.
    ENDIF.
ZTSA0502-MANDT =
ZVSA0504-MANDT .
ZTSA0502-DEPCD =
ZVSA0504-DEPCD .
ZTSA0502-DEPNO =
ZVSA0504-DEPNO .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0502 ##WARN_OK.
    ELSE.
    INSERT ZTSA0502 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA0502_T WHERE
    DEPCD = ZTSA0502-DEPCD AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA0502_T.
ZTSA0502_T-DEPCD =
ZTSA0502-DEPCD .
ZTSA0502_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA0502_T-DEPNA =
ZVSA0504-DEPNA .
    IF SY-SUBRC = 0.
    UPDATE ZTSA0502_T ##WARN_OK.
    ELSE.
    INSERT ZTSA0502_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA0504-UPD_FLAG,
STATUS_ZVSA0504-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA0504.
  SELECT SINGLE * FROM ZTSA0502 WHERE
DEPCD = ZVSA0504-DEPCD .
ZVSA0504-MANDT =
ZTSA0502-MANDT .
ZVSA0504-DEPCD =
ZTSA0502-DEPCD .
ZVSA0504-DEPNO =
ZTSA0502-DEPNO .
    SELECT SINGLE * FROM ZTSA0502_T WHERE
DEPCD = ZTSA0502-DEPCD AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA0504-DEPNA =
ZTSA0502_T-DEPNA .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA0504-DEPNA .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA0504 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA0504-DEPCD TO
ZTSA0502-DEPCD .
MOVE ZVSA0504-MANDT TO
ZTSA0502-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0502'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0502 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0502'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA0502-DEPCD TO
ZTSA0502_T-DEPCD .
MOVE SY-LANGU TO
ZTSA0502_T-SPRAS .
MOVE ZVSA0504-MANDT TO
ZTSA0502_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA0502_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA0502_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA0502_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA05PRO.......................................*
FORM GET_DATA_ZVSA05PRO.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA05PRO WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA05PRO .
ZVSA05PRO-MANDT =
ZTSA05PRO-MANDT .
ZVSA05PRO-PRDCD =
ZTSA05PRO-PRDCD .
ZVSA05PRO-PTYPE =
ZTSA05PRO-PTYPE .
ZVSA05PRO-PCOST =
ZTSA05PRO-PCOST .
ZVSA05PRO-WAERS =
ZTSA05PRO-WAERS .
ZVSA05PRO-PERNR =
ZTSA05PRO-PERNR .
    SELECT SINGLE * FROM ZTSA05PRO_T WHERE
PRDCD = ZTSA05PRO-PRDCD AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA05PRO-PNAME =
ZTSA05PRO_T-PNAME .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA05PRO.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA05PRO .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA05PRO.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA05PRO-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA05PRO WHERE
  PRDCD = ZVSA05PRO-PRDCD .
    IF SY-SUBRC = 0.
    DELETE ZTSA05PRO .
    ENDIF.
    DELETE FROM ZTSA05PRO_T WHERE
    PRDCD = ZTSA05PRO-PRDCD .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA05PRO WHERE
  PRDCD = ZVSA05PRO-PRDCD .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA05PRO.
    ENDIF.
ZTSA05PRO-MANDT =
ZVSA05PRO-MANDT .
ZTSA05PRO-PRDCD =
ZVSA05PRO-PRDCD .
ZTSA05PRO-PTYPE =
ZVSA05PRO-PTYPE .
ZTSA05PRO-PCOST =
ZVSA05PRO-PCOST .
ZTSA05PRO-WAERS =
ZVSA05PRO-WAERS .
ZTSA05PRO-PERNR =
ZVSA05PRO-PERNR .
    IF SY-SUBRC = 0.
    UPDATE ZTSA05PRO ##WARN_OK.
    ELSE.
    INSERT ZTSA05PRO .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA05PRO_T WHERE
    PRDCD = ZTSA05PRO-PRDCD AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA05PRO_T.
ZTSA05PRO_T-PRDCD =
ZTSA05PRO-PRDCD .
ZTSA05PRO_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA05PRO_T-PNAME =
ZVSA05PRO-PNAME .
    IF SY-SUBRC = 0.
    UPDATE ZTSA05PRO_T ##WARN_OK.
    ELSE.
    INSERT ZTSA05PRO_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA05PRO-UPD_FLAG,
STATUS_ZVSA05PRO-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA05PRO.
  SELECT SINGLE * FROM ZTSA05PRO WHERE
PRDCD = ZVSA05PRO-PRDCD .
ZVSA05PRO-MANDT =
ZTSA05PRO-MANDT .
ZVSA05PRO-PRDCD =
ZTSA05PRO-PRDCD .
ZVSA05PRO-PTYPE =
ZTSA05PRO-PTYPE .
ZVSA05PRO-PCOST =
ZTSA05PRO-PCOST .
ZVSA05PRO-WAERS =
ZTSA05PRO-WAERS .
ZVSA05PRO-PERNR =
ZTSA05PRO-PERNR .
    SELECT SINGLE * FROM ZTSA05PRO_T WHERE
PRDCD = ZTSA05PRO-PRDCD AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA05PRO-PNAME =
ZTSA05PRO_T-PNAME .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA05PRO-PNAME .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA05PRO USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA05PRO-PRDCD TO
ZTSA05PRO-PRDCD .
MOVE ZVSA05PRO-MANDT TO
ZTSA05PRO-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA05PRO'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA05PRO TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA05PRO'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA05PRO-PRDCD TO
ZTSA05PRO_T-PRDCD .
MOVE SY-LANGU TO
ZTSA05PRO_T-SPRAS .
MOVE ZVSA05PRO-MANDT TO
ZTSA05PRO_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA05PRO_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA05PRO_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA05PRO_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
